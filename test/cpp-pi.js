// Printing the first 15000 digits of pi.
// Uses the Rabinowitz/Wagon spigot algorithm. This program is based on the obfuscated C source:

// | a[52514],b,c=52514,d,e,f=1e4,g,h;main(){for(;b=c-=14;h=printf("%04d", e+d/f))for(e=d%=f;g=--b*2;d/=g)d=d*b+f*(h?a[b]:f/5),a[b]=d%--g;}

// Making it slightly more readable (though no less obscure):

// | int a[52514], b = 0, c = 52514, d = 10000, e = 10000, f = 10000, g = 0, first = 1;
//   int main () {
//     while (b = c -= 14) {
//       e = d %= f;
//       while (g = --b << 1) {
//         d = d * b + f * (first ? f/5 : a[b]);
//         a[b] = d % --g;
//         d /= g;
//       }
//       printf("%04d", e + d / f);
//       first = 0;
//     }
//   }

// Here's the stack layout for the hlasm encoding:

// | first a c f e b d g
//       7 6 5 4 3 2 1 0

caterwaul.clone('std seq continuation hlasm.cpp')(function () {
  l[c = 'K k52514.T<mw k10000.. kwk [k6sk14b.k9S .k4S [[Ksk5sd[,]z .TS k4S tsETS tsK<a k7s[k4sk5d,][k6sTsT<a*]? k5sc TsTsc a tS EKsd k7sk4sT<a k103ng = KS]zI] F]y k6sM k7+ k'] in
  console.log(caterwaul.hlasm.cpp({main: c}, {trace: true}))})();

// Generated by SDoc 
